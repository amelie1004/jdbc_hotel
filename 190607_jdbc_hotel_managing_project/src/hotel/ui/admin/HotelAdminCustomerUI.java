package hotel.ui.admin;

import java.util.Scanner;

import hotel.common.HotelUICommon;
import hotel.ui.customer.HotelBasicUI;
import hotel.vo.CustomerInfo;

public class HotelAdminCustomerUI {
	private Scanner sc = new Scanner(System.in);
	private int choice = 0;
	
	public HotelAdminCustomerUI() {
		
	}
	
	public void startCustomerListMenu() {
		HotelUICommon.menuListStart("고객 계정 관리");

		while (HotelUICommon.isMenuRun(1)) {
			HotelUICommon.clearConsole();
			HotelUICommon.showMenuNaviDesc();
			
			showCustomerListMenu();
			selectCustomerListMenu();
		}

		HotelUICommon.menuListEnd();
	}
	
	public void showCustomerListMenu() {
		System.out.println("┌─────────────────────────────┐");
		System.out.println("│           고객 계정 관리                    │");
		System.out.println("└─────────────────────────────┘\n");
		System.out.println("   1. 계정 검색(Login_ID)");
		System.out.println("   2. 계정 검색(NickName)");
		System.out.println("   3. 계정 검색(Phone_Number)");
		System.out.println("   4. 계정 검색(E-mail)");
		System.out.println("  10. 계정 수정(Login_ID)");
		System.out.println("  20. 계정 블록설정(Login_ID)");
		System.out.println("  21. 계정 블록해제(Login_ID)");
		System.out.println("  30. 계정 삭제(Login_ID)");
		System.out.println(" 100. 뒤로가기");
		System.out.print("\n  메뉴를 선택해주세요 : ");
		choice = sc.nextInt();
	}
	
	public void selectCustomerListMenu() {
		switch (choice) {
		case 1:
			// 계정 검색(Login_ID) 
			searchCustomerByLoginID();
			break;
		case 2:
			// 계정 검색(NickName)
			searchCustomerByNickName();
			break;
		case 3:
			// 계정 검색(Phone_Number)
			searchCustomerByPhoneNum();
			break;
		case 4:
			// 계정 검색(E-mail)
			searchCustomerByEmail();
			break;
		case 10:
			// 계정 수정(Login_ID)
			modifyCustomerByID();
			break;
		case 20:
			// 계정 블록설정(Login_ID)
			blockCustomerByLoginID();
			break;
		case 21:
			// 계정 블록해제(Login_ID)
			releaseCustomerByLoginID();
			break;
		case 30:
			// 계정 삭제(Login_ID)
			deleteCustomerByLoginID();
			break;
		case 100:
			HotelUICommon.menuListStop();
			break;
		default:
			break;
		}
	}
	
	public void searchCustomerByLoginID() {
		String loginID = null;
		
		HotelUICommon.menuStart("계정 검색(id)");
		
		System.out.println("┌─────────────────────────────┐");
		System.out.println("│          계정 검색 (id)         │");
		System.out.println("└─────────────────────────────┘\n");
		
		System.out.print("   찾고자하는 계정의 로그인 아이디 입력 : ");
		loginID = sc.next();
		
		CustomerInfo resInfo = HotelAdminBasicUI.getCustomerDAO().getCustomerByID(loginID);
		
		if (resInfo != null) {
			System.out.println("No : " + resInfo.getCustomerNo()
					+ ", 아이디 : " + resInfo.getLoginId()
					+ ", 비밀번호 만료 : " + resInfo.getIsPasswdExpired()
					+ ", 닉네임 : " + resInfo.getNickName()
					+ ", 이름 : " + resInfo.getFirstName()
					+ ", 성 : " + resInfo.getLastName()
					+ ", 나이 : " + resInfo.getAge() + "\n"
					+ "\t전화번호 : " + resInfo.getPhoneNumber()
					+ ", 마지막 로그인 일자 : " + resInfo.getLastLoginDate()
					+ ", Block : " + resInfo.getIsBlocked());
			
			System.out.println("\n   정상적으로 검색되었습니다. (^^)");
		} else {
			System.out.println("\n   해당하는 아이디가 존재하지 않습니다.");
		}

		sc = new Scanner(System.in);
		HotelUICommon.menuEnd(sc);
	}
	
	public void searchCustomerByNickName() {
		String nickName = null;
		
		HotelUICommon.menuStart("계정 검색(NickName)");
		
		System.out.println("┌─────────────────────────────┐");
		System.out.println("│       계정 검색 (NickName)      │");
		System.out.println("└─────────────────────────────┘\n");
		
		sc = new Scanner(System.in);
		System.out.print("   찾고자하는 계정의 닉네임 입력 : ");
		nickName = sc.next();
		
		CustomerInfo resInfo = HotelAdminBasicUI.getCustomerDAO().getCustomerByNickName(nickName);
		
		if (resInfo != null) {
			System.out.println("No : " + resInfo.getCustomerNo()
					+ ", 아이디 : " + resInfo.getLoginId()
					+ ", 비밀번호 만료 : " + resInfo.getIsPasswdExpired()
					+ ", 닉네임 : " + resInfo.getNickName()
					+ ", 이름 : " + resInfo.getFirstName()
					+ ", 성 : " + resInfo.getLastName()
					+ ", 나이 : " + resInfo.getAge() + "\n"
					+ "\t전화번호 : " + resInfo.getPhoneNumber()
					+ ", 마지막 로그인 일자 : " + resInfo.getLastLoginDate()
					+ ", Block : " + resInfo.getIsBlocked());
			
			System.out.println("\n   정상적으로 검색되었습니다. (^^)");
		} else {
			System.out.println("\n   해당하는 닉네임이 존재하지 않습니다.");
		}

		sc = new Scanner(System.in);
		HotelUICommon.menuEnd(sc);
	}
	
	public void searchCustomerByPhoneNum() {
		String phoneNum = null;
		
		HotelUICommon.menuStart("계정 검색(Phone_Number)");
		
		System.out.println("┌─────────────────────────────┐");
		System.out.println("│     계정 검색 (Phone_Number)    │");
		System.out.println("└─────────────────────────────┘\n");
		
		sc = new Scanner(System.in);
		System.out.print("   찾고자하는 계정의 전화번호 입력 : ");
		phoneNum = sc.next();
		
		CustomerInfo resInfo = HotelAdminBasicUI.getCustomerDAO().getCustomerByPhoneNum(phoneNum);
		
		if (resInfo != null) {
			System.out.println("No : " + resInfo.getCustomerNo()
					+ ", 아이디 : " + resInfo.getLoginId()
					+ ", 비밀번호 만료 : " + resInfo.getIsPasswdExpired()
					+ ", 닉네임 : " + resInfo.getNickName()
					+ ", 이름 : " + resInfo.getFirstName()
					+ ", 성 : " + resInfo.getLastName()
					+ ", 나이 : " + resInfo.getAge() + "\n"
					+ "\t전화번호 : " + resInfo.getPhoneNumber()
					+ ", 마지막 로그인 일자 : " + resInfo.getLastLoginDate()
					+ ", Block : " + resInfo.getIsBlocked());
			
			System.out.println("\n   정상적으로 검색되었습니다. (^^)");
		} else {
			System.out.println("\n   해당하는 전화번호가 존재하지 않습니다.");
		}

		sc = new Scanner(System.in);
		HotelUICommon.menuEnd(sc);
	}
	
	public void searchCustomerByEmail() {
		String email = null;
		
		HotelUICommon.menuStart("계정 검색(E-mail)");
		
		System.out.println("┌─────────────────────────────┐");
		System.out.println("│        계정 검색 (E-mail)       │");
		System.out.println("└─────────────────────────────┘\n");
		
		sc = new Scanner(System.in);
		System.out.print("   찾고자하는 계정의 이메일 입력 : ");
		email = sc.next();
		
		CustomerInfo resInfo = HotelAdminBasicUI.getCustomerDAO().getCustomerByEmail(email);
		
		if (resInfo != null) {
			System.out.println("No : " + resInfo.getCustomerNo()
					+ ", 아이디 : " + resInfo.getLoginId()
					+ ", 비밀번호 만료 : " + resInfo.getIsPasswdExpired()
					+ ", 닉네임 : " + resInfo.getNickName()
					+ ", 이름 : " + resInfo.getFirstName()
					+ ", 성 : " + resInfo.getLastName()
					+ ", 나이 : " + resInfo.getAge() + "\n"
					+ "\t전화번호 : " + resInfo.getPhoneNumber()
					+ ", 마지막 로그인 일자 : " + resInfo.getLastLoginDate()
					+ ", Block : " + resInfo.getIsBlocked());
			
			System.out.println("\n   정상적으로 검색되었습니다. (^^)");
		} else {
			System.out.println("\n   해당하는 전화번호가 존재하지 않습니다.");
		}

		sc = new Scanner(System.in);
		HotelUICommon.menuEnd(sc);
	}
	
	public void modifyCustomerByID() {
		String loginId, loginPasswd;
		String nickName, firstName, lastName;
		int age;
		String phoneNumber, email;
		
		HotelUICommon.menuStart("계정 수정(Login_ID)");
		
		System.out.println("┌─────────────────────────────┐");
		System.out.println("│       계정 수정(Login_ID)      │");
		System.out.println("└─────────────────────────────┘\n");
		
		sc = new Scanner(System.in);
		System.out.print("   수정하고자 하는 계정의 아이디 입력 : ");
		loginId = sc.next();
		
		if (HotelBasicUI.getCustomerDAO().getCustomerByID(loginId) == null) {
			System.out.println("\n   수정하고자 하는 아이디가 존재하지 않습니다.\n");
			sc = new Scanner(System.in);
			HotelUICommon.menuEnd(sc);
			return;
		}

		System.out.print("   1. 패스워드 입력 : ");
		loginPasswd = sc.next();
		sc.nextLine();
		System.out.print("   2. 닉네임 입력 : ");
		nickName = sc.nextLine();
		System.out.print("   3. 이름(First name) 입력 : ");
		firstName = sc.nextLine();
		System.out.print("   4. 성(Last name) 입력 : ");
		lastName = sc.nextLine();
		System.out.print("   5. 나이 입력 : ");
		age = sc.nextInt();
		System.out.print("   6. 전화번호 입력 : ");
		phoneNumber = sc.next();
		System.out.print("   7. 이메일 입력 : ");
		email = sc.next();
		
		if (HotelAdminBasicUI.getCustomerDAO().modifyCustomerById(loginId, loginPasswd, nickName,
				firstName, lastName, age, phoneNumber, email)) {
			System.out.println("\n   정상적으로 등록되었습니다. (^^)\n");
		} else {
			System.out.println("\n   등록에 실패하였습니다.\n");
		}
		
		sc = new Scanner(System.in);
		HotelUICommon.menuEnd(sc);
	}
	
	
	public void blockCustomerByLoginID() {
		String loginID = null;
		
		HotelUICommon.menuStart("계정 블록설정(Login_ID)");
		
		System.out.println("┌─────────────────────────────┐");
		System.out.println("│      계정 블록설정(Login_ID)    │");
		System.out.println("└─────────────────────────────┘\n");
		
		sc = new Scanner(System.in);
		System.out.print("   블록하고자 하는 계정의 아이디 입력 : ");
		loginID = sc.next();
		
		if (HotelAdminBasicUI.getCustomerDAO().blockCustomerByLoginID(loginID, true)) {
			System.out.println("\n   정상적으로 블록처리 되었습니다.");
		} else {
			System.out.println("\n   해당하는 아이디가 존재하지 않습니다.");
		}

		sc = new Scanner(System.in);
		HotelUICommon.menuEnd(sc);
	}
	
	public void releaseCustomerByLoginID() {
		String loginID = null;
		
		HotelUICommon.menuStart("계정 블록해제(Login_ID)");
		
		System.out.println("┌─────────────────────────────┐");
		System.out.println("│      계정 블록해제(Login_ID)    │");
		System.out.println("└─────────────────────────────┘\n");
		
		sc = new Scanner(System.in);
		System.out.print("   블록해제하고자 하는 계정의 아이디 입력 : ");
		loginID = sc.next();
		
		if (HotelAdminBasicUI.getCustomerDAO().blockCustomerByLoginID(loginID, false)) {
			System.out.println("\n   정상적으로 블록해제처리 되었습니다.");
		} else {
			System.out.println("\n   해당하는 아이디가 존재하지 않습니다.");
		}

		sc = new Scanner(System.in);
		HotelUICommon.menuEnd(sc);
	}
	
	public void deleteCustomerByLoginID() {
		String loginID = null;
		
		HotelUICommon.menuStart("계정 삭제(Login_ID)");
		
		System.out.println("┌─────────────────────────────┐");
		System.out.println("│       계정 삭제(Login_ID)      │");
		System.out.println("└─────────────────────────────┘\n");
		
		sc = new Scanner(System.in);
		System.out.print("   삭제하고자 하는 계정의 아이디 입력 : ");
		loginID = sc.next();
		
		if (HotelAdminBasicUI.getCustomerDAO().deleteCustomerByLoginID(loginID)) {
			System.out.println("\n   정상적으로 삭제처리 되었습니다.");
		} else {
			System.out.println("\n   해당하는 아이디가 존재하지 않습니다.");
		}

		sc = new Scanner(System.in);
		HotelUICommon.menuEnd(sc);
	}
}
